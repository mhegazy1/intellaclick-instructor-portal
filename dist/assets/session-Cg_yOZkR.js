import{t as s}from"./toast-93yYkT8V.js";/* empty css               */import{l as p}from"./logger-gSLuc3Ra.js";let g,h,d,S,y=[],f=-1,T,E=null;document.addEventListener("DOMContentLoaded",function(){const e=new URLSearchParams(window.location.search);if(g=e.get("id"),h=e.get("code"),e.get("type"),!g||!h){s.error("Invalid session parameters"),setTimeout(()=>window.location.href="classes.html",2e3);return}const t=sessionStorage.getItem("pendingQuestions");if(t){const o=JSON.parse(t);y.push(...o),sessionStorage.removeItem("pendingQuestions"),sessionStorage.removeItem("currentQuestionIndex"),w()}else{const o=sessionStorage.getItem("pendingQuestion");if(o){const i=JSON.parse(o);y.push(i),sessionStorage.removeItem("pendingQuestion"),w()}}Q(),b(),D()});function Q(){localStorage.getItem("token")||(window.location.href="/login.html")}async function b(){try{const e=await fetch(`https://api.intellaclick.com/api/sessions/code/${h}`,{headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}});if(!e.ok)throw new Error("Failed to load session");d=(await e.json()).session,S=d.classId,p.debug("Session loaded:",{sessionId:g,sessionCode:h,sessionData:d,hasCurrentQuestion:!!d.currentQuestion}),M()}catch(e){p.error("Error loading session:",e),s.error("Failed to load session")}}function M(){document.getElementById("sessionCode").textContent=d.sessionCode,document.getElementById("participantCount").textContent=d.participantCount||0;const e=`https://join.intellaclick.com/session/${d.sessionCode}`;document.getElementById("joinUrl").innerHTML=`
                <strong>Students can join at:</strong><br>
                <div style="display: flex; align-items: center; gap: 12px; margin: 8px 0;">
                    <span style="font-size: 16px; user-select: all; flex: 1;">${e}</span>
                    <button class="btn btn-secondary" onclick="copyJoinUrl('${e}')" style="padding: 6px 12px; font-size: 12px;">
                        Copy Link
                    </button>
                </div>
                <small style="color: var(--text-secondary); margin-top: 4px; display: block;">
                    Session ID: ${d.id||d._id}<br>
                    ${d.restrictToEnrolled===!1?"Open to all students":"Restricted to enrolled students only"}
                </small>
            `,L(e);const t=document.getElementById("sessionStatus");t.textContent=d.status.charAt(0).toUpperCase()+d.status.slice(1),t.className=`status-badge status-${d.status}`,d.status==="active"&&d.currentQuestion&&(document.getElementById("stopBtn").disabled=!1,document.getElementById("resultsBtn").disabled=!1,k(d.currentQuestion)),O()}function O(){const e=document.getElementById("participantsList");fetch(`https://api.intellaclick.com/api/sessions/${g}/participants`,{headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}}).then(t=>t.json()).then(t=>{t.participants&&t.participants.length>0?(e.innerHTML="",t.participants.forEach(o=>{const i=document.createElement("div");i.className="participant-card",i.innerHTML=`
                            <strong>${o.name||"Anonymous"}</strong><br>
                            <small style="color: var(--text-secondary);">
                                Joined: ${new Date(o.joinedAt).toLocaleTimeString()}<br>
                                ${o.isEnrolled?"Enrolled Student":"Guest"}
                            </small>
                        `,e.appendChild(i)})):e.innerHTML='<p style="color: var(--text-secondary);">No participants yet. Share the session code for students to join.</p>'}).catch(t=>{p.error("Error loading participants:",t)})}function L(e){const t=document.getElementById("qrcode");t.innerHTML="";const o=document.createElement("canvas");QRCode.toCanvas(o,e,{width:400,margin:2,color:{dark:"#000000",light:"#FFFFFF"}},function(i){if(i){p.error("QR Code generation error:",i),t.innerHTML='<p style="color: var(--text-secondary);">QR Code generation failed</p>';return}o.style.width="200px",o.style.height="200px",t.appendChild(o)})}function w(){const e=document.getElementById("queueList");sessionStorage.setItem("questionQueue_"+h,JSON.stringify(y)),sessionStorage.setItem("questionIndex_"+h,f.toString()),y.length===0?(e.innerHTML='<p style="color: var(--text-secondary); font-size: 14px;">No questions in queue. Create a new question or import from a quiz.</p>',document.getElementById("sendBtn").disabled=!0):(e.innerHTML="",y.forEach((t,o)=>{const i=document.createElement("div");i.className="question-item";const n=document.createElement("div");n.className="question-item-text",n.innerHTML=`<strong>${o+1}.</strong> ${t.text||t.questionText}`;const l=document.createElement("div");if(l.className="question-item-actions",o>f){const r=document.createElement("button");r.className="btn btn-secondary",r.style.padding="4px 8px",r.style.fontSize="12px",r.style.marginRight="4px",r.textContent="Edit",r.onclick=()=>z(o),l.appendChild(r);const a=document.createElement("button");a.className="btn btn-secondary",a.style.padding="4px 8px",a.style.fontSize="12px",a.textContent="Remove",a.onclick=()=>$(o),l.appendChild(a)}i.appendChild(n),i.appendChild(l),e.appendChild(i)}),document.getElementById("sendBtn").disabled=!1)}function $(e){y.splice(e,1),w()}let I=null;function z(e){I=e;const t=y[e];document.getElementById("questionModal").style.display="block";const o=t.type||t.questionType||"mcq";p.debug("Editing question with type:",o),document.getElementById("modalQuestionType").value=o,document.getElementById("modalQuestionText").value=t.text||t.questionText||"",setTimeout(()=>v(),10),setTimeout(()=>{switch(t.type){case"mcq":t.optionTexts&&["A","B","C","D"].forEach((a,u)=>{const c=document.getElementById(`modalOption${a}`);if(c&&t.optionTexts[u]&&(c.value=t.optionTexts[u]),t.correctAnswer===a||t.correctAnswer===u){const m=document.querySelector(`input[name="modalCorrect"][value="${a}"]`);m&&(m.checked=!0)}});break;case"tf":const n=t.correctAnswer==="true"||t.correctAnswer===!0?"true":"false",l=document.querySelector(`input[name="modalTF"][value="${n}"]`);l&&(l.checked=!0);break;case"matching":t.pairs&&t.pairs.forEach((a,u)=>{const c=document.getElementById(`modalMatch${u+1}Left`),m=document.getElementById(`modalMatch${u+1}Right`);c&&(c.value=a.left||""),m&&(m.value=a.right||"")});break;case"ordering":t.correctOrder&&t.correctOrder.forEach((a,u)=>{const c=document.getElementById(`modalOrder${u+1}`);c&&(c.value=a||"")});break;case"fillblank":const r=document.getElementById("modalBlankAnswer");r&&(r.value=t.correctAnswer||"");break}},100);const i=document.querySelector("#questionModal h2");i&&(i.textContent="Edit Question")}async function A(){if(f+1>=y.length){s.error("No more questions in queue");return}f++,sessionStorage.setItem("questionIndex_"+h,f.toString());const e=y[f],t={...e};delete t.type;const i={mcq:"multiple_choice",tf:"boolean",matching:"matching",ordering:"ordering",fillblank:"fill_blank"}[e.type]||e.type;t.questionType=i,t.type=i,t.questionText=e.text||e.questionText,e.type==="tf"?t.options=["True","False"]:e.type==="mcq"?e.optionTexts&&(t.options=e.options,t.optionTexts=e.optionTexts):e.type==="matching"?t.pairs=e.pairs||[]:e.type==="ordering"?t.correctOrder=e.correctOrder||[]:e.type==="fillblank"&&(t.correctAnswer=e.correctAnswer||""),p.debug("Sending question:",{sessionId:g,endpoint:`https://api.intellaclick.com/api/sessions/${g}/questions`,questionData:t,hasQuestionText:!!t.questionText,questionType:t.questionType});try{const n=await fetch(`https://api.intellaclick.com/api/sessions/${g}/questions`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`},body:JSON.stringify(t)});if(!n.ok){const r=await n.json();throw p.error("API Error:",{status:n.status,error:r}),new Error(r.error||"Failed to send question")}const l=await n.json();p.debug("Question sent successfully:",l),s.success("Question sent successfully!"),document.getElementById("stopBtn").disabled=!1,document.getElementById("resultsBtn").disabled=!1,k(e),w(),setTimeout(async()=>{await b()},500)}catch(n){p.error("Error sending question:",n),n.name==="TypeError"&&n.message==="Failed to fetch"?(s.error("Network error: Unable to reach the API server. This may be a CORS issue."),p.error("CORS Error Details:",{error:n,message:"The API server may need to add instructor.intellaclick.com to its allowed origins",currentOrigin:window.location.origin,apiUrl:"https://api.intellaclick.com"}),window.confirm(`Network error detected. This is likely a CORS configuration issue.

The backend needs to add instructor.intellaclick.com to its allowed origins.

Click OK to open the CORS test page for more details.`)&&window.open("/cors-test.html","_blank")):s.error(n.message||"Failed to send question"),f--}}function k(e){document.getElementById("currentQuestionSection").style.display="block";const t=e.type||e.questionType,o=e.text||e.questionText||"";p.debug("ðŸ“º DISPLAYING QUESTION IN SESSION CONTROL:",{questionType:t,questionText:o,hasPairs:!!e.pairs,pairs:e.pairs,hasCorrectOrder:!!e.correctOrder,correctOrder:e.correctOrder,fullQuestion:e});let i=o;(t==="fillblank"||t==="fill_blank")&&(i=i.replace(/\[blank\]/gi,'<span style="display: inline-block; min-width: 100px; border-bottom: 2px solid #4F46E5; margin: 0 6px; height: 1.2em; vertical-align: bottom;"></span>')),document.getElementById("questionText").innerHTML=i;const n=document.getElementById("questionOptions");if(n.innerHTML="",(t==="mcq"||t==="multiple_choice")&&(e.optionTexts||e.options)){const l=e.optionTexts||e.options;(e.options&&e.optionTexts?e.options:["A","B","C","D"]).forEach((a,u)=>{if(l[u]){const c=document.createElement("div");c.style.marginTop="8px",c.textContent=`${a}: ${l[u]}`,n.appendChild(c)}})}else t==="tf"||t==="boolean"?n.innerHTML='<div style="margin-top: 8px;">A: True</div><div style="margin-top: 8px;">B: False</div>':t==="matching"&&e.pairs?(n.innerHTML="<strong>Match the following:</strong>",e.pairs.forEach((l,r)=>{const a=document.createElement("div");a.style.marginTop="8px",a.textContent=`${r+1}. ${l.left} â†’ ?`,n.appendChild(a)})):(t==="ordering"||t==="ordering")&&e.correctOrder&&(n.innerHTML="<strong>Put in correct order:</strong>",[...e.correctOrder].sort(()=>Math.random()-.5).forEach((r,a)=>{const u=document.createElement("div");u.style.marginTop="8px",u.textContent=`${String.fromCharCode(65+a)}. ${r}`,n.appendChild(u)}))}function F(){document.getElementById("questionModal").style.display="block",v()}function q(){document.getElementById("questionModal").style.display="none",document.getElementById("modalQuestionText").value="",document.getElementById("modalQuestionType").value="mcq",I=null;const e=document.querySelector("#questionModal h2");e&&(e.textContent="Create Question")}function N(){document.getElementById("importModal").style.display="block",G()}function C(){document.getElementById("importModal").style.display="none",E=null}function v(){const e=document.getElementById("modalQuestionType").value,t=document.getElementById("modalQuestionOptions");switch(e){case"mcq":t.innerHTML=`
                        <label>Answer Options (select correct answer)</label>
                        <div style="margin-top: 8px;">
                            <input type="radio" name="modalCorrect" value="A" checked> 
                            <input type="text" id="modalOptionA" placeholder="Option A" style="width: calc(100% - 30px); margin-left: 8px;">
                        </div>
                        <div style="margin-top: 8px;">
                            <input type="radio" name="modalCorrect" value="B"> 
                            <input type="text" id="modalOptionB" placeholder="Option B" style="width: calc(100% - 30px); margin-left: 8px;">
                        </div>
                        <div style="margin-top: 8px;">
                            <input type="radio" name="modalCorrect" value="C"> 
                            <input type="text" id="modalOptionC" placeholder="Option C" style="width: calc(100% - 30px); margin-left: 8px;">
                        </div>
                        <div style="margin-top: 8px;">
                            <input type="radio" name="modalCorrect" value="D"> 
                            <input type="text" id="modalOptionD" placeholder="Option D" style="width: calc(100% - 30px); margin-left: 8px;">
                        </div>
                    `;break;case"tf":t.innerHTML=`
                        <label>Correct Answer</label>
                        <div style="margin-top: 8px;">
                            <input type="radio" name="modalTF" value="true" checked> True
                            <input type="radio" name="modalTF" value="false" style="margin-left: 20px;"> False
                        </div>
                    `;break;case"matching":t.innerHTML=`
                        <label>Matching Pairs</label>
                        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px; margin-top: 8px;">
                            <input type="text" placeholder="Item 1" id="modalMatch1Left">
                            <input type="text" placeholder="Match 1" id="modalMatch1Right">
                            <input type="text" placeholder="Item 2" id="modalMatch2Left">
                            <input type="text" placeholder="Match 2" id="modalMatch2Right">
                            <input type="text" placeholder="Item 3" id="modalMatch3Left">
                            <input type="text" placeholder="Match 3" id="modalMatch3Right">
                        </div>
                    `;break;case"ordering":t.innerHTML=`
                        <label>Items in Correct Order</label>
                        <div style="margin-top: 8px;">
                            <input type="text" placeholder="1st item" id="modalOrder1" style="margin-bottom: 8px;">
                            <input type="text" placeholder="2nd item" id="modalOrder2" style="margin-bottom: 8px;">
                            <input type="text" placeholder="3rd item" id="modalOrder3" style="margin-bottom: 8px;">
                            <input type="text" placeholder="4th item" id="modalOrder4">
                        </div>
                    `;break;case"fillblank":t.innerHTML=`
                        <label>Correct Answer</label>
                        <input type="text" id="modalBlankAnswer" placeholder="Enter the correct answer" style="margin-top: 8px;">
                        <small style="display: block; margin-top: 8px; color: var(--text-secondary);">Use [blank] in your question where the answer should go</small>
                    `;break}}async function H(){var e;try{const t=((e=d.currentQuestion)==null?void 0:e.questionId)||"current";if(!(await fetch(`https://api.intellaclick.com/api/sessions/${g}/questions/${t}/end`,{method:"POST",headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}})).ok)throw new Error("Failed to stop question");s.success("Question stopped"),document.getElementById("currentQuestionSection").style.display="none",await b()}catch(t){p.error("Error stopping question:",t),s.error("Failed to stop question")}}async function P(){document.getElementById("responsesSection").style.display="block",s.info("Results feature coming soon")}async function R(){var e;if(confirm("Are you sure you want to end this session?"))try{const t=((e=d==null?void 0:d.gamification)==null?void 0:e.enabled)&&(d==null?void 0:d.classId);let o;if(t?(p.debug("Ending session with gamification processing..."),o=await fetch(`https://api.intellaclick.com/api/sessions-gamified/${g}/end-with-gamification`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`}})):(p.debug("Ending session (no gamification)..."),o=await fetch(`https://api.intellaclick.com/api/sessions/${g}/status`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`},body:JSON.stringify({status:"ended"})})),!o.ok)throw new Error("Failed to end session");const i=await o.json();p.debug("Session ended:",i),t&&i.gamificationResults?s.success(`Session ended - ${i.gamificationResults.length} students earned points!`):s.success("Session ended"),B(),setTimeout(()=>window.location.href="classes.html",2e3)}catch(t){p.error("Error ending session:",t),s.error("Failed to end session")}}function D(){T=setInterval(b,3e3)}function B(){T&&clearInterval(T)}function j(){const e=`display.html?id=${g}&code=${h}`;window.open(e,"IntellaClickDisplay","width=1920,height=1080,menubar=no,toolbar=no,location=no,status=no")}function U(e){navigator.clipboard.writeText(e).then(()=>{s.success("Link copied to clipboard!")}).catch(t=>{const o=document.createElement("textarea");o.value=e,o.style.position="fixed",o.style.left="-999999px",document.body.appendChild(o),o.select();try{document.execCommand("copy"),s.success("Link copied to clipboard!")}catch{s.error("Failed to copy link")}document.body.removeChild(o)})}function _(){const e=document.getElementById("sessionCode").textContent;navigator.clipboard.writeText(e).then(()=>{s.success("Session code copied!")}).catch(t=>{const o=document.createElement("textarea");o.value=e,o.style.position="fixed",o.style.left="-999999px",document.body.appendChild(o),o.select();try{document.execCommand("copy"),s.success("Session code copied!")}catch{s.error("Failed to copy code")}document.body.removeChild(o)})}function J(){const e=document.getElementById("modalQuestionText").value.trim(),t=document.getElementById("modalQuestionType").value;if(!e){s.error("Please enter a question");return}let o={text:e,type:t,timeLimit:60,points:10};switch(t){case"mcq":const i=[],n=[];let l=null;if(["A","B","C","D"].forEach(c=>{const m=document.getElementById(`modalOption${c}`);if(m&&m.value.trim()){i.push(c),n.push(m.value.trim());const x=document.querySelector(`input[name="modalCorrect"][value="${c}"]`);x&&x.checked&&(l=c)}}),i.length<2){s.error("Please provide at least 2 options");return}o.options=i,o.optionTexts=n,o.correctAnswer=l;break;case"tf":o.options=["True","False"],o.correctAnswer=document.querySelector('input[name="modalTF"]:checked').value;break;case"matching":const r=[];for(let c=1;c<=3;c++){const m=document.getElementById(`modalMatch${c}Left`).value.trim(),x=document.getElementById(`modalMatch${c}Right`).value.trim();m&&x&&r.push({left:m,right:x})}if(r.length<2){s.error("Please provide at least 2 matching pairs");return}o.pairs=r;break;case"ordering":const a=[];for(let c=1;c<=4;c++){const m=document.getElementById(`modalOrder${c}`).value.trim();m&&a.push(m)}if(a.length<2){s.error("Please provide at least 2 items");return}o.correctOrder=a;break;case"fillblank":const u=document.getElementById("modalBlankAnswer").value.trim();if(!u){s.error("Please provide the correct answer");return}if(!e.includes("[blank]")){s.error("Please include [blank] in your question");return}o.correctAnswer=u;break}I!==null?(y[I]=o,I=null,s.success("Question updated")):(y.push(o),s.success("Question added to queue")),w(),q()}async function G(){try{const e=await fetch("https://api.intellaclick.com/api/quizzes",{headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}});if(!e.ok)throw new Error("Failed to load quizzes");const o=(await e.json()).quizzes||[],i=document.getElementById("quizList");o.length===0?(i.innerHTML='<p style="color: var(--text-secondary); text-align: center; padding: 20px;">No quizzes found. <a href="saved-questions.html" style="color: var(--primary-color);">Create your first quiz</a></p>',document.getElementById("importBtn").disabled=!0):(i.innerHTML="",o.forEach(n=>{const l=document.createElement("div");l.className="quiz-item",l.innerHTML=`
                            <strong>${n.title}</strong><br>
                            <small style="color: var(--text-secondary);">${n.questionCount||0} questions â€¢ ${n.totalPoints||0} points</small>
                        `,l.onclick=()=>V(n._id,l),i.appendChild(l)}))}catch(e){p.error("Error loading quizzes:",e);const t=document.getElementById("quizList");t.innerHTML='<p style="color: var(--danger-color); text-align: center; padding: 20px;">Failed to load quizzes. Please try again.</p>'}}function V(e,t){E=e,document.querySelectorAll(".quiz-item").forEach(o=>{o.classList.remove("selected")}),t.classList.add("selected"),document.getElementById("importBtn").disabled=!1}async function K(){if(!E){s.error("Please select a quiz");return}try{const e=await fetch(`https://api.intellaclick.com/api/quizzes/${E}`,{headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}});if(!e.ok)throw new Error("Failed to load quiz");const t=await e.json(),o=t.quiz||t;o.questions&&o.questions.length>0?(o.questions.forEach(i=>{const n=i.questionSnapshot||i,l=n.questionType||n.type||"mcq",r={text:n.questionText||i.text||"",type:l,options:n.options||[],correctAnswer:n.correctAnswer||0,timeLimit:n.timeLimit||i.timeLimit||60,points:n.points||i.points||10};r.type==="matching"&&n.pairs&&(r.pairs=n.pairs,p.debug("ðŸ“¦ Imported matching question with pairs:",n.pairs)),r.type==="ordering"&&n.correctOrder&&(r.correctOrder=n.correctOrder,p.debug("ðŸ“¦ Imported ordering question with correctOrder:",n.correctOrder)),y.push(r)}),w(),C(),s.success(`Imported ${o.questions.length} questions from ${o.title}`)):s.error("Quiz has no questions")}catch(e){p.error("Error importing quiz:",e),s.error("Failed to import quiz")}}window.onclick=function(e){e.target.className==="modal"&&(e.target.style.display="none")};window.addEventListener("beforeunload",B);window.copySessionCode=_;window.openDisplayView=j;window.showQuestionModal=F;window.showImportModal=N;window.sendNextQuestion=A;window.stopQuestion=H;window.showResults=P;window.loadSession=b;window.endSession=R;window.closeQuestionModal=q;window.addQuestionToQueue=J;window.closeImportModal=C;window.importSelectedQuiz=K;window.copyJoinUrl=U;window.updateModalOptions=v;
