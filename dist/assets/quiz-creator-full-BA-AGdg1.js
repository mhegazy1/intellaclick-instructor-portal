import{t as r}from"./toast-93yYkT8V.js";/* empty css               *//* empty css                       */import{q as b}from"./api-BBvzFwfC.js";import{l as g}from"./logger-gSLuc3Ra.js";let d=[],q=null,h=null,p=4,f=4;document.addEventListener("DOMContentLoaded",function(){C(),document.getElementById("quizForm").addEventListener("submit",F),w(4),v(4),E();const e=new URLSearchParams(window.location.search).get("id");e&&$(e)});function w(t){p=t;const e=document.getElementById("mcqOptionsContainer");e.innerHTML="";for(let n=0;n<t;n++){const i=String.fromCharCode(65+n),o=document.createElement("div");o.className="radio-option",o.innerHTML=`
                    <input type="radio" name="correctAnswer" value="${i}" ${n===0?"checked":""}>
                    <input type="text" id="option${i}" placeholder="Option ${i}" style="width: calc(100% - 40px); margin-left: 8px;">
                `,e.appendChild(o)}}function v(t){f=t;const e=document.getElementById("pollOptionsContainer");e.innerHTML="";for(let n=0;n<t;n++){const i=String.fromCharCode(65+n),o=document.createElement("input");o.type="text",o.id=`pollOption${i}`,o.placeholder=`Option ${i}`,o.style.width="100%",e.appendChild(o)}}function T(){if(p>=26){r.error("Maximum 26 options allowed");return}p++,w(p)}function x(){if(p<=2){r.error("Minimum 2 options required");return}p--,w(p)}function z(){if(f>=26){r.error("Maximum 26 options allowed");return}f++,v(f)}function A(){if(f<=2){r.error("Minimum 2 options required");return}f--,v(f)}function C(){localStorage.getItem("token")||(window.location.href="login.html")}async function $(t){try{g.debug("Loading quiz for editing:",t);const e=await b.getById(t),n=e.quiz||e;q=t,document.getElementById("quizTitle").value=n.title||"",document.getElementById("quizDescription").value=n.description||"",document.querySelector(".header h1").textContent="Edit Quiz",document.getElementById("saveButton").textContent="Update Quiz",n.questions&&n.questions.length>0&&(d=n.questions.map(i=>{const o=i.questionSnapshot||{};return{questionText:o.questionText||"",questionType:o.questionType||"mcq",options:o.options||[],correctAnswer:o.correctAnswer,pairs:o.pairs,correctOrder:o.correctOrder,points:i.points||10}}),B()),r.success("Quiz loaded for editing")}catch(e){g.error("Error loading quiz:",e),r.error("Failed to load quiz: "+e.message)}}function E(){const t=document.getElementById("questionType").value;switch(document.getElementById("mcqOptions").style.display="none",document.getElementById("pollOptions").style.display="none",document.getElementById("tfOptions").style.display="none",document.getElementById("matchingOptions").style.display="none",document.getElementById("orderingOptions").style.display="none",document.getElementById("fillblankOptions").style.display="none",t){case"mcq":document.getElementById("mcqOptions").style.display="block";break;case"poll":document.getElementById("pollOptions").style.display="block";break;case"tf":document.getElementById("tfOptions").style.display="block";break;case"matching":document.getElementById("matchingOptions").style.display="block";break;case"ordering":document.getElementById("orderingOptions").style.display="block";break;case"fillblank":document.getElementById("fillblankOptions").style.display="block";break}}function P(){const t=document.getElementById("questionType").value,e=document.getElementById("questionText").value.trim();if(!e){r.error("Please enter a question");return}let n={questionText:e,questionType:t,points:10};try{switch(t){case"mcq":const i=[];let o=null;for(let l=0;l<p;l++){const a=String.fromCharCode(65+l),m=document.getElementById(`option${a}`);if(m&&m.value.trim()){i.push(m.value.trim());const k=document.querySelector(`input[name="correctAnswer"][value="${a}"]`);k&&k.checked&&(o=a)}}if(i.length<2){r.error("Please provide at least 2 answer options");return}n.options=i,n.correctAnswer=o;break;case"poll":const s=[];for(let l=0;l<f;l++){const a=String.fromCharCode(65+l),m=document.getElementById(`pollOption${a}`);m&&m.value.trim()&&s.push(m.value.trim())}if(s.length<2){r.error("Please provide at least 2 poll options");return}n.options=s;const u=document.getElementById("pollParticipationPoints").checked;n.awardParticipationPoints=u;break;case"tf":n.options=["True","False"],n.correctAnswer=document.querySelector('input[name="tfAnswer"]:checked').value;break;case"matching":const c=[];for(let l=1;l<=4;l++){const a=document.getElementById(`match${l}Left`).value.trim(),m=document.getElementById(`match${l}Right`).value.trim();a&&m&&c.push({left:a,right:m})}if(c.length<2){r.error("Please provide at least 2 matching pairs");return}n.pairs=c;break;case"ordering":const y=[];for(let l=1;l<=4;l++){const a=document.getElementById(`order${l}`).value.trim();a&&y.push(a)}if(y.length<2){r.error("Please provide at least 2 items to order");return}n.correctOrder=y;break;case"fillblank":const I=document.getElementById("blankAnswer").value.trim();if(!I){r.error("Please provide the correct answer");return}if(!e.includes("[blank]")){r.error("Please include [blank] in your question where the answer should go");return}n.correctAnswer=I;break}if(h!==null){d[h]=n,r.success("Question updated successfully!"),h=null;const i=document.querySelector('button[onclick="addQuestion()"]');i&&(i.textContent="+ Add This Question",i.className="btn btn-primary")}else d.push(n),r.success("Question added successfully!");O(),B()}catch(i){g.error("Error adding question:",i),r.error("Error adding question: "+i.message)}}function O(){document.getElementById("questionText").value="",["A","B","C","D"].forEach(e=>{const n=document.getElementById(`option${e}`);n&&(n.value="");const i=document.getElementById(`pollOption${e}`);i&&(i.value="")});for(let e=1;e<=4;e++){const n=document.getElementById(`match${e}Left`),i=document.getElementById(`match${e}Right`),o=document.getElementById(`order${e}`);n&&(n.value=""),i&&(i.value=""),o&&(o.value="")}const t=document.getElementById("blankAnswer");t&&(t.value="")}function S(t){const e=d[t];switch(h=t,document.getElementById("questionText").value=e.questionText,document.getElementById("questionType").value=e.questionType,E(),e.questionType){case"mcq":if(e.options&&(w(e.options.length),e.options.forEach((o,s)=>{const u=String.fromCharCode(65+s),c=document.getElementById(`option${u}`);c&&(c.value=o)}),e.correctAnswer)){const o=document.querySelector(`input[name="correctAnswer"][value="${e.correctAnswer}"]`);o&&(o.checked=!0)}break;case"poll":e.options&&(v(e.options.length),e.options.forEach((o,s)=>{const u=String.fromCharCode(65+s),c=document.getElementById(`pollOption${u}`);c&&(c.value=o)}));break;case"tf":if(e.correctAnswer){const o=document.querySelector(`input[name="tfAnswer"][value="${e.correctAnswer}"]`);o&&(o.checked=!0)}break;case"matching":e.pairs&&e.pairs.forEach((o,s)=>{const u=s+1,c=document.getElementById(`match${u}Left`),y=document.getElementById(`match${u}Right`);c&&(c.value=o.left),y&&(y.value=o.right)});break;case"ordering":e.correctOrder&&e.correctOrder.forEach((o,s)=>{const u=document.getElementById(`order${s+1}`);u&&(u.value=o)});break;case"fillblank":e.correctAnswer&&(document.getElementById("blankAnswer").value=e.correctAnswer);break}const n=document.querySelector('button[onclick="addQuestion()"]');n&&(n.textContent="Update Question",n.className="btn btn-success");const i=document.getElementById("cancelEditBtn");i&&(i.style.display="inline-block"),document.getElementById("questionText").scrollIntoView({behavior:"smooth",block:"center"}),r.success("Question loaded for editing")}function L(t){window.confirm("Remove this question?")&&(d.splice(t,1),B(),h===t&&Q(),r.success("Question removed"))}function Q(){h=null,O();const t=document.querySelector('button[onclick="addQuestion()"]');t&&(t.textContent="+ Add This Question",t.className="btn btn-primary");const e=document.getElementById("cancelEditBtn");e&&(e.style.display="none"),r.success("Edit cancelled")}function B(){const t=document.getElementById("questionsList");if(d.length===0){t.innerHTML='<p style="color: var(--text-secondary); font-size: 14px;">No questions added yet.</p>';return}t.innerHTML=`
                <div style="margin-bottom: 12px;">
                    <strong>${d.length} Question(s) Added:</strong>
                </div>
                ${d.map((e,n)=>`
                    <div style="background-color: #F9FAFB; padding: 12px; border-radius: 8px; margin-bottom: 8px; display: flex; justify-content: space-between; align-items: start;">
                        <div style="flex: 1;">
                            <div style="font-weight: 500; margin-bottom: 4px;">Q${n+1}: ${e.questionText}</div>
                            <div style="font-size: 12px; color: var(--text-secondary);">Type: ${M(e.questionType)}</div>
                        </div>
                        <div style="display: flex; gap: 8px;">
                            <button type="button" class="btn btn-secondary btn-small" onclick="editQuestion(${n})">Edit</button>
                            <button type="button" class="btn btn-danger btn-small" onclick="removeQuestion(${n})">Remove</button>
                        </div>
                    </div>
                `).join("")}
            `}function M(t){return{mcq:"Multiple Choice",poll:"Poll",tf:"True/False",matching:"Matching",ordering:"Put in Order",fillblank:"Fill in the Blank"}[t]||t.toUpperCase()}async function F(t){t.preventDefault();const e=document.getElementById("quizTitle").value.trim(),n=document.getElementById("quizDescription").value.trim();if(!e){r.error("Please enter a quiz title");return}if(d.length===0){r.error("Please add at least one question to the quiz");return}const i=d.map(s=>({questionSnapshot:{questionText:s.questionText,questionType:s.questionType,options:s.options,correctAnswer:s.correctAnswer,pairs:s.pairs,correctOrder:s.correctOrder},points:s.points||10})),o={title:e,description:n,type:"standard",questions:i,questionCount:i.length,settings:{shuffleQuestions:!1,shuffleAnswers:!1,showCorrectAnswers:!0}};try{document.getElementById("saveButton").disabled=!0,document.getElementById("saveButton").textContent="Saving...";let s;q?(s=await b.update(q,o),g.debug("Quiz updated:",s),r.success("Quiz updated successfully!")):(s=await b.create(o),g.debug("Quiz created:",s),r.success("Quiz saved successfully!")),setTimeout(()=>{window.location.href="quizzes.html"},1e3)}catch(s){g.error("Error saving quiz:",s),r.error("Failed to save quiz: "+s.message),document.getElementById("saveButton").disabled=!1,document.getElementById("saveButton").textContent="Save Quiz"}}function R(){d.length>0?window.confirm("Are you sure you want to cancel? All unsaved changes will be lost.")&&(window.location.href="quizzes.html"):window.location.href="quizzes.html"}function D(){const t=document.getElementById("questionText"),e=t.selectionStart,n=t.selectionEnd,i=t.value,o=i.substring(0,e)+"[blank]"+i.substring(n);t.value=o,t.selectionStart=t.selectionEnd=e+7,t.focus()}window.updateQuestionOptions=E;window.addQuestion=P;window.editQuestion=S;window.removeQuestion=L;window.cancelEditQuestion=Q;window.cancelQuiz=R;window.insertBlank=D;window.addMcqOption=T;window.removeMcqOption=x;window.addPollOption=z;window.removePollOption=A;
