import{t as r}from"./toast-93yYkT8V.js";/* empty css               *//* empty css                       */import{q as g}from"./api-BBvzFwfC.js";import{l as m}from"./logger-gSLuc3Ra.js";let d=[],h=null,p=null;document.addEventListener("DOMContentLoaded",function(){w(),document.getElementById("quizForm").addEventListener("submit",T),b();const e=new URLSearchParams(window.location.search).get("id");e&&q(e)});function w(){localStorage.getItem("token")||(window.location.href="login.html")}async function q(t){try{m.debug("Loading quiz for editing:",t);const e=await g.getById(t),n=e.quiz||e;h=t,document.getElementById("quizTitle").value=n.title||"",document.getElementById("quizDescription").value=n.description||"",document.querySelector(".header h1").textContent="Edit Quiz",document.getElementById("saveButton").textContent="Update Quiz",n.questions&&n.questions.length>0&&(d=n.questions.map(s=>{const o=s.questionSnapshot||{};return{questionText:o.questionText||"",questionType:o.questionType||"mcq",options:o.options||[],correctAnswer:o.correctAnswer,pairs:o.pairs,correctOrder:o.correctOrder,points:s.points||10}}),v()),r.success("Quiz loaded for editing")}catch(e){m.error("Error loading quiz:",e),r.error("Failed to load quiz: "+e.message)}}function b(){const t=document.getElementById("questionType").value;switch(document.getElementById("mcqOptions").style.display="none",document.getElementById("pollOptions").style.display="none",document.getElementById("tfOptions").style.display="none",document.getElementById("matchingOptions").style.display="none",document.getElementById("orderingOptions").style.display="none",document.getElementById("fillblankOptions").style.display="none",t){case"mcq":document.getElementById("mcqOptions").style.display="block";break;case"poll":document.getElementById("pollOptions").style.display="block";break;case"tf":document.getElementById("tfOptions").style.display="block";break;case"matching":document.getElementById("matchingOptions").style.display="block";break;case"ordering":document.getElementById("orderingOptions").style.display="block";break;case"fillblank":document.getElementById("fillblankOptions").style.display="block";break}}function I(){const t=document.getElementById("questionType").value,e=document.getElementById("questionText").value.trim();if(!e){r.error("Please enter a question");return}let n={questionText:e,questionType:t,points:10};try{switch(t){case"mcq":const s=[];let o=null;if(["A","B","C","D"].forEach(c=>{const u=document.getElementById(`option${c}`);if(u&&u.value.trim()){s.push(u.value.trim());const f=document.querySelector(`input[name="correctAnswer"][value="${c}"]`);f&&f.checked&&(o=c)}}),s.length<2){r.error("Please provide at least 2 answer options");return}n.options=s,n.correctAnswer=o;break;case"poll":const i=[];if(["A","B","C","D"].forEach(c=>{const u=document.getElementById(`pollOption${c}`);u&&u.value.trim()&&i.push(u.value.trim())}),i.length<2){r.error("Please provide at least 2 poll options");return}n.options=i;break;case"tf":n.options=["True","False"],n.correctAnswer=document.querySelector('input[name="tfAnswer"]:checked').value;break;case"matching":const l=[];for(let c=1;c<=4;c++){const u=document.getElementById(`match${c}Left`).value.trim(),f=document.getElementById(`match${c}Right`).value.trim();u&&f&&l.push({left:u,right:f})}if(l.length<2){r.error("Please provide at least 2 matching pairs");return}n.pairs=l;break;case"ordering":const a=[];for(let c=1;c<=4;c++){const u=document.getElementById(`order${c}`).value.trim();u&&a.push(u)}if(a.length<2){r.error("Please provide at least 2 items to order");return}n.correctOrder=a;break;case"fillblank":const y=document.getElementById("blankAnswer").value.trim();if(!y){r.error("Please provide the correct answer");return}if(!e.includes("[blank]")){r.error("Please include [blank] in your question where the answer should go");return}n.correctAnswer=y;break}if(p!==null){d[p]=n,r.success("Question updated successfully!"),p=null;const s=document.querySelector('button[onclick="addQuestion()"]');s&&(s.textContent="+ Add This Question",s.className="btn btn-primary")}else d.push(n),r.success("Question added successfully!");E(),v()}catch(s){m.error("Error adding question:",s),r.error("Error adding question: "+s.message)}}function E(){document.getElementById("questionText").value="",["A","B","C","D"].forEach(e=>{const n=document.getElementById(`option${e}`);n&&(n.value="");const s=document.getElementById(`pollOption${e}`);s&&(s.value="")});for(let e=1;e<=4;e++){const n=document.getElementById(`match${e}Left`),s=document.getElementById(`match${e}Right`),o=document.getElementById(`order${e}`);n&&(n.value=""),s&&(s.value=""),o&&(o.value="")}const t=document.getElementById("blankAnswer");t&&(t.value="")}function k(t){const e=d[t];switch(p=t,document.getElementById("questionText").value=e.questionText,document.getElementById("questionType").value=e.questionType,b(),e.questionType){case"mcq":if(e.options&&(e.options.forEach((o,i)=>{const l=String.fromCharCode(65+i),a=document.getElementById(`option${l}`);a&&(a.value=o)}),e.correctAnswer)){const o=document.querySelector(`input[name="correctAnswer"][value="${e.correctAnswer}"]`);o&&(o.checked=!0)}break;case"poll":e.options&&e.options.forEach((o,i)=>{const l=String.fromCharCode(65+i),a=document.getElementById(`pollOption${l}`);a&&(a.value=o)});break;case"tf":if(e.correctAnswer){const o=document.querySelector(`input[name="tfAnswer"][value="${e.correctAnswer}"]`);o&&(o.checked=!0)}break;case"matching":e.pairs&&e.pairs.forEach((o,i)=>{const l=i+1,a=document.getElementById(`match${l}Left`),y=document.getElementById(`match${l}Right`);a&&(a.value=o.left),y&&(y.value=o.right)});break;case"ordering":e.correctOrder&&e.correctOrder.forEach((o,i)=>{const l=document.getElementById(`order${i+1}`);l&&(l.value=o)});break;case"fillblank":e.correctAnswer&&(document.getElementById("blankAnswer").value=e.correctAnswer);break}const n=document.querySelector('button[onclick="addQuestion()"]');n&&(n.textContent="Update Question",n.className="btn btn-success");const s=document.getElementById("cancelEditBtn");s&&(s.style.display="inline-block"),document.getElementById("questionText").scrollIntoView({behavior:"smooth",block:"center"}),r.success("Question loaded for editing")}function Q(t){window.confirm("Remove this question?")&&(d.splice(t,1),v(),p===t&&B(),r.success("Question removed"))}function B(){p=null,E();const t=document.querySelector('button[onclick="addQuestion()"]');t&&(t.textContent="+ Add This Question",t.className="btn btn-primary");const e=document.getElementById("cancelEditBtn");e&&(e.style.display="none"),r.success("Edit cancelled")}function v(){const t=document.getElementById("questionsList");if(d.length===0){t.innerHTML='<p style="color: var(--text-secondary); font-size: 14px;">No questions added yet.</p>';return}t.innerHTML=`
                <div style="margin-bottom: 12px;">
                    <strong>${d.length} Question(s) Added:</strong>
                </div>
                ${d.map((e,n)=>`
                    <div style="background-color: #F9FAFB; padding: 12px; border-radius: 8px; margin-bottom: 8px; display: flex; justify-content: space-between; align-items: start;">
                        <div style="flex: 1;">
                            <div style="font-weight: 500; margin-bottom: 4px;">Q${n+1}: ${e.questionText}</div>
                            <div style="font-size: 12px; color: var(--text-secondary);">Type: ${z(e.questionType)}</div>
                        </div>
                        <div style="display: flex; gap: 8px;">
                            <button type="button" class="btn btn-secondary btn-small" onclick="editQuestion(${n})">Edit</button>
                            <button type="button" class="btn btn-danger btn-small" onclick="removeQuestion(${n})">Remove</button>
                        </div>
                    </div>
                `).join("")}
            `}function z(t){return{mcq:"Multiple Choice",poll:"Poll",tf:"True/False",matching:"Matching",ordering:"Put in Order",fillblank:"Fill in the Blank"}[t]||t.toUpperCase()}async function T(t){t.preventDefault();const e=document.getElementById("quizTitle").value.trim(),n=document.getElementById("quizDescription").value.trim();if(!e){r.error("Please enter a quiz title");return}if(d.length===0){r.error("Please add at least one question to the quiz");return}const s=d.map(i=>({questionSnapshot:{questionText:i.questionText,questionType:i.questionType,options:i.options,correctAnswer:i.correctAnswer,pairs:i.pairs,correctOrder:i.correctOrder},points:i.points||10})),o={title:e,description:n,type:"standard",questions:s,questionCount:s.length,settings:{shuffleQuestions:!1,shuffleAnswers:!1,showCorrectAnswers:!0}};try{document.getElementById("saveButton").disabled=!0,document.getElementById("saveButton").textContent="Saving...";let i;h?(i=await g.update(h,o),m.debug("Quiz updated:",i),r.success("Quiz updated successfully!")):(i=await g.create(o),m.debug("Quiz created:",i),r.success("Quiz saved successfully!")),setTimeout(()=>{window.location.href="quizzes.html"},1e3)}catch(i){m.error("Error saving quiz:",i),r.error("Failed to save quiz: "+i.message),document.getElementById("saveButton").disabled=!1,document.getElementById("saveButton").textContent="Save Quiz"}}function A(){d.length>0?window.confirm("Are you sure you want to cancel? All unsaved changes will be lost.")&&(window.location.href="quizzes.html"):window.location.href="quizzes.html"}function x(){const t=document.getElementById("questionText"),e=t.selectionStart,n=t.selectionEnd,s=t.value,o=s.substring(0,e)+"[blank]"+s.substring(n);t.value=o,t.selectionStart=t.selectionEnd=e+7,t.focus()}window.updateQuestionOptions=b;window.addQuestion=I;window.editQuestion=k;window.removeQuestion=Q;window.cancelEditQuestion=B;window.cancelQuiz=A;window.insertBlank=x;
