import{t as r}from"./toast-93yYkT8V.js";/* empty css               *//* empty css                       */import{q as g}from"./api-BBvzFwfC.js";import{l as c}from"./logger-gSLuc3Ra.js";let a=[],y=null;document.addEventListener("DOMContentLoaded",function(){q(),document.getElementById("quizForm").addEventListener("submit",k),v();const t=new URLSearchParams(window.location.search).get("id");t&&w(t)});function q(){localStorage.getItem("token")||(window.location.href="login.html")}async function w(e){try{c.debug("Loading quiz for editing:",e);const t=await g.getById(e),n=t.quiz||t;y=e,document.getElementById("quizTitle").value=n.title||"",document.getElementById("quizDescription").value=n.description||"",document.querySelector(".header h1").textContent="Edit Quiz",document.getElementById("saveButton").textContent="Update Quiz",n.questions&&n.questions.length>0&&(a=n.questions.map(o=>{const i=o.questionSnapshot||{};return{questionText:i.questionText||"",questionType:i.questionType||"mcq",options:i.options||[],correctAnswer:i.correctAnswer,pairs:i.pairs,correctOrder:i.correctOrder,points:o.points||10}}),f()),r.success("Quiz loaded for editing")}catch(t){c.error("Error loading quiz:",t),r.error("Failed to load quiz: "+t.message)}}function v(){const e=document.getElementById("questionType").value;switch(document.getElementById("mcqOptions").style.display="none",document.getElementById("pollOptions").style.display="none",document.getElementById("tfOptions").style.display="none",document.getElementById("matchingOptions").style.display="none",document.getElementById("orderingOptions").style.display="none",document.getElementById("fillblankOptions").style.display="none",e){case"mcq":document.getElementById("mcqOptions").style.display="block";break;case"poll":document.getElementById("pollOptions").style.display="block";break;case"tf":document.getElementById("tfOptions").style.display="block";break;case"matching":document.getElementById("matchingOptions").style.display="block";break;case"ordering":document.getElementById("orderingOptions").style.display="block";break;case"fillblank":document.getElementById("fillblankOptions").style.display="block";break}}function b(){const e=document.getElementById("questionType").value,t=document.getElementById("questionText").value.trim();if(!t){r.error("Please enter a question");return}let n={questionText:t,questionType:e,points:10};try{switch(e){case"mcq":const o=[];let i=null;if(["A","B","C","D"].forEach(l=>{const u=document.getElementById(`option${l}`);if(u&&u.value.trim()){o.push(u.value.trim());const d=document.querySelector(`input[name="correctAnswer"][value="${l}"]`);d&&d.checked&&(i=l)}}),o.length<2){r.error("Please provide at least 2 answer options");return}n.options=o,n.correctAnswer=i;break;case"poll":const s=[];if(["A","B","C","D"].forEach(l=>{const u=document.getElementById(`pollOption${l}`);u&&u.value.trim()&&s.push(u.value.trim())}),s.length<2){r.error("Please provide at least 2 poll options");return}n.options=s;break;case"tf":n.options=["True","False"],n.correctAnswer=document.querySelector('input[name="tfAnswer"]:checked').value;break;case"matching":const m=[];for(let l=1;l<=4;l++){const u=document.getElementById(`match${l}Left`).value.trim(),d=document.getElementById(`match${l}Right`).value.trim();u&&d&&m.push({left:u,right:d})}if(m.length<2){r.error("Please provide at least 2 matching pairs");return}n.pairs=m;break;case"ordering":const p=[];for(let l=1;l<=4;l++){const u=document.getElementById(`order${l}`).value.trim();u&&p.push(u)}if(p.length<2){r.error("Please provide at least 2 items to order");return}n.correctOrder=p;break;case"fillblank":const h=document.getElementById("blankAnswer").value.trim();if(!h){r.error("Please provide the correct answer");return}if(!t.includes("[blank]")){r.error("Please include [blank] in your question where the answer should go");return}n.correctAnswer=h;break}a.push(n),B(),f(),r.success("Question added successfully!")}catch(o){c.error("Error adding question:",o),r.error("Error adding question: "+o.message)}}function B(){document.getElementById("questionText").value="",["A","B","C","D"].forEach(t=>{const n=document.getElementById(`option${t}`);n&&(n.value="");const o=document.getElementById(`pollOption${t}`);o&&(o.value="")});for(let t=1;t<=4;t++){const n=document.getElementById(`match${t}Left`),o=document.getElementById(`match${t}Right`),i=document.getElementById(`order${t}`);n&&(n.value=""),o&&(o.value=""),i&&(i.value="")}const e=document.getElementById("blankAnswer");e&&(e.value="")}function E(e){window.confirm("Remove this question?")&&(a.splice(e,1),f(),r.success("Question removed"))}function f(){const e=document.getElementById("questionsList");if(a.length===0){e.innerHTML='<p style="color: var(--text-secondary); font-size: 14px;">No questions added yet.</p>';return}e.innerHTML=`
                <div style="margin-bottom: 12px;">
                    <strong>${a.length} Question(s) Added:</strong>
                </div>
                ${a.map((t,n)=>`
                    <div style="background-color: #F9FAFB; padding: 12px; border-radius: 8px; margin-bottom: 8px; display: flex; justify-content: space-between; align-items: start;">
                        <div style="flex: 1;">
                            <div style="font-weight: 500; margin-bottom: 4px;">Q${n+1}: ${t.questionText}</div>
                            <div style="font-size: 12px; color: var(--text-secondary);">Type: ${I(t.questionType)}</div>
                        </div>
                        <button type="button" class="btn btn-danger btn-small" onclick="removeQuestion(${n})" style="margin-left: 12px;">Remove</button>
                    </div>
                `).join("")}
            `}function I(e){return{mcq:"Multiple Choice",poll:"Poll",tf:"True/False",matching:"Matching",ordering:"Put in Order",fillblank:"Fill in the Blank"}[e]||e.toUpperCase()}async function k(e){e.preventDefault();const t=document.getElementById("quizTitle").value.trim(),n=document.getElementById("quizDescription").value.trim();if(!t){r.error("Please enter a quiz title");return}if(a.length===0){r.error("Please add at least one question to the quiz");return}const o=a.map(s=>({questionSnapshot:{questionText:s.questionText,questionType:s.questionType,options:s.options,correctAnswer:s.correctAnswer,pairs:s.pairs,correctOrder:s.correctOrder},points:s.points||10})),i={title:t,description:n,type:"standard",questions:o,questionCount:o.length,settings:{shuffleQuestions:!1,shuffleAnswers:!1,showCorrectAnswers:!0}};try{document.getElementById("saveButton").disabled=!0,document.getElementById("saveButton").textContent="Saving...";let s;y?(s=await g.update(y,i),c.debug("Quiz updated:",s),r.success("Quiz updated successfully!")):(s=await g.create(i),c.debug("Quiz created:",s),r.success("Quiz saved successfully!")),setTimeout(()=>{window.location.href="quizzes.html"},1e3)}catch(s){c.error("Error saving quiz:",s),r.error("Failed to save quiz: "+s.message),document.getElementById("saveButton").disabled=!1,document.getElementById("saveButton").textContent="Save Quiz"}}function z(){a.length>0?window.confirm("Are you sure you want to cancel? All unsaved changes will be lost.")&&(window.location.href="quizzes.html"):window.location.href="quizzes.html"}function T(){const e=document.getElementById("questionText"),t=e.selectionStart,n=e.selectionEnd,o=e.value,i=o.substring(0,t)+"[blank]"+o.substring(n);e.value=i,e.selectionStart=e.selectionEnd=t+7,e.focus()}window.updateQuestionOptions=v;window.addQuestion=b;window.removeQuestion=E;window.cancelQuiz=z;window.insertBlank=T;
