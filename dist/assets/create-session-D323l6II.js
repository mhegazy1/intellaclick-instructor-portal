import{t as r}from"./toast-93yYkT8V.js";/* empty css               *//* empty css                       */import{c as A,s as C}from"./api-BBvzFwfC.js";import{l as i}from"./logger-gSLuc3Ra.js";let I,g,f=null,u=[],S=4,B=4;document.addEventListener("DOMContentLoaded",function(){if(I=new URLSearchParams(window.location.search).get("classId"),!I){window.location.href="classes.html";return}T(),Q(),z(4),$(4),document.getElementById("sessionForm").addEventListener("submit",R),O();const n=sessionStorage.getItem("fromSavedSet"),o=sessionStorage.getItem("pendingQuestions");i.debug("🔵 Page loaded - checking for pending questions"),i.debug("fromSavedSet:",n),i.debug("pendingQuestions:",o?"exists":"none"),n==="true"&&o&&(i.debug("✅ Auto-selecting Quick Poll mode"),setTimeout(()=>{q("quick")},500))});function T(){localStorage.getItem("token")||(window.location.href="login.html")}function z(e){S=e;const n=document.getElementById("mcqOptionsContainer");n.innerHTML="";for(let o=0;o<e;o++){const t=String.fromCharCode(65+o),s=document.createElement("div");s.className="radio-option",s.innerHTML=`
                    <input type="radio" name="correctAnswer" value="${t}" ${o===0?"checked":""}>
                    <input type="text" id="option${t}" placeholder="Option ${t}" style="width: calc(100% - 40px); margin-left: 8px;">
                `,n.appendChild(s)}}function $(e){B=e;const n=document.getElementById("pollOptionsContainer");n.innerHTML="";for(let o=0;o<e;o++){const t=String.fromCharCode(65+o),s=document.createElement("input");s.type="text",s.id=`pollOption${t}`,s.placeholder=`Option ${t}`,s.style.width="100%",n.appendChild(s)}}async function O(){try{const e=await fetch("https://api.intellaclick.com/api/users/session-settings",{headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}});if(e.ok){const o=(await e.json()).settings;o.allowAnonymous!==void 0&&(document.getElementById("allowAnonymous").checked=o.allowAnonymous),o.openToAll!==void 0&&(document.getElementById("openToAll").checked=o.openToAll),o.allowAnswerChange!==void 0&&(document.getElementById("allowAnswerChange").checked=o.allowAnswerChange),o.showCorrectAnswer!==void 0&&(document.getElementById("showCorrectAnswer").checked=o.showCorrectAnswer),o.enableGamification!==void 0&&(document.getElementById("enableGamification").checked=o.enableGamification),i.debug("✅ Loaded saved session settings from backend:",o)}else i.debug("No saved settings found, using defaults")}catch(e){i.error("Error loading saved settings:",e)}}async function Q(){try{const e=await A.getById(I);g=e.class||e,document.getElementById("classInfo").innerHTML=`
                    <strong>${g.name}</strong> - ${g.code} ${g.section?"("+g.section+")":""}
                `;const n=new Date,o=n.toLocaleDateString("en-US",{month:"short",day:"numeric",year:"numeric"}),t=n.toLocaleTimeString("en-US",{hour:"numeric",minute:"2-digit"});document.getElementById("sessionName").value=`${g.name} Session - ${o} ${t}`}catch(e){i.error("Error loading class:",e),r.error("Failed to load class information")}}function q(e){if(i.debug("=== selectSessionType called ==="),i.debug("type:",e),f=e,e!=="quick")u=[];else{const t=sessionStorage.getItem("fromSavedSet"),s=sessionStorage.getItem("pendingQuestions");if(i.debug("fromSavedSet:",t),i.debug("pendingQuestions:",s?`${s.length} chars`:"null"),t==="true"&&s)try{u=JSON.parse(s),i.debug("✅ Loaded questions:",u.length),sessionStorage.removeItem("fromSavedSet"),sessionStorage.removeItem("pendingQuestions"),r.success(`Loaded ${u.length} questions from saved set`)}catch(a){i.error("❌ Error loading saved questions:",a)}else i.debug("No pending questions found");E()}document.querySelectorAll(".option-card").forEach(t=>{t.classList.remove("selected")}),document.getElementById(e+"Option").classList.add("selected"),document.getElementById("sessionConfig").style.display="block",document.getElementById("quickPollConfig").style.display=e==="quick"?"block":"none",document.getElementById("quizConfig").style.display=e==="quiz"?"block":"none",document.getElementById("desktopInstructions").style.display=e==="desktop"?"block":"none";const n=e!=="desktop";document.getElementById("sessionSettings").style.display=n?"block":"none",document.getElementById("sessionOptions").style.display=n?"block":"none",document.getElementById("sessionName").parentElement.style.display=n?"block":"none",document.getElementById("startButton").style.display=e==="desktop"?"none":"inline-block",e==="quiz"?x():e==="desktop"&&P();const o=new Date;document.getElementById("sessionName").value=`${g.name} - ${o.toLocaleDateString()}`}async function x(){try{const n=await(await fetch("https://api.intellaclick.com/api/quizzes",{headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}})).json(),o=document.getElementById("quizSelect"),t=document.getElementById("noQuizzesMessage");n.success&&n.quizzes&&n.quizzes.length>0?(o.innerHTML='<option value="">Select a quiz...</option>'+n.quizzes.map(s=>`<option value="${s._id}">${s.title} (${s.questionCount||0} questions)</option>`).join(""),t.style.display="none"):(o.innerHTML='<option value="">No quizzes available</option>',t.style.display="block")}catch(e){i.error("Error loading quizzes:",e);const n=document.getElementById("quizSelect");n.innerHTML='<option value="">Error loading quizzes</option>',r.error("Failed to load quizzes")}}function P(){document.getElementById("desktopClassName").textContent=g.name,document.getElementById("desktopJoinCode").textContent=g.joinCode||"N/A"}function L(){const e=document.getElementById("questionType").value;switch(document.getElementById("mcqOptions").style.display="none",document.getElementById("pollOptions").style.display="none",document.getElementById("tfOptions").style.display="none",document.getElementById("matchingOptions").style.display="none",document.getElementById("orderingOptions").style.display="none",document.getElementById("fillblankOptions").style.display="none",e){case"mcq":document.getElementById("mcqOptions").style.display="block";break;case"poll":document.getElementById("pollOptions").style.display="block";break;case"tf":document.getElementById("tfOptions").style.display="block";break;case"matching":document.getElementById("matchingOptions").style.display="block";break;case"ordering":document.getElementById("orderingOptions").style.display="block";break;case"fillblank":document.getElementById("fillblankOptions").style.display="block";break}}function N(){const e=document.getElementById("questionType").value,n=document.getElementById("questionText").value.trim();if(!n){r.error("Please enter a question");return}const o=parseInt(document.getElementById("duration").value)||60;let t={text:n,type:e,timeLimit:o,points:10};try{switch(e){case"mcq":const s=[],a=[];let p=null;for(let l=0;l<S;l++){const c=String.fromCharCode(65+l),m=document.getElementById(`option${c}`);if(m&&m.value.trim()){s.push(c),a.push(m.value.trim());const v=document.querySelector(`input[name="correctAnswer"][value="${c}"]`);v&&v.checked&&(p=c)}}if(s.length<2){r.error("Please provide at least 2 answer options");return}t.options=s,t.optionTexts=a,t.correctAnswer=p;break;case"poll":const y=[],w=[];for(let l=0;l<B;l++){const c=String.fromCharCode(65+l),m=document.getElementById(`pollOption${c}`);m&&m.value.trim()&&(y.push(c),w.push(m.value.trim()))}if(y.length<2){r.error("Please provide at least 2 poll options");return}t.options=y,t.optionTexts=w;const k=document.getElementById("pollParticipationPoints").checked;t.awardParticipationPoints=k;break;case"tf":t.options=["True","False"],t.correctAnswer=document.querySelector('input[name="tfAnswer"]:checked').value;break;case"matching":const d=[];for(let l=1;l<=4;l++){const c=document.getElementById(`match${l}Left`).value.trim(),m=document.getElementById(`match${l}Right`).value.trim();c&&m&&d.push({left:c,right:m})}if(d.length<2){r.error("Please provide at least 2 matching pairs");return}t.pairs=d;break;case"ordering":const h=[];for(let l=1;l<=4;l++){const c=document.getElementById(`order${l}`).value.trim();c&&h.push(c)}if(h.length<2){r.error("Please provide at least 2 items to order");return}t.correctOrder=h;break;case"fillblank":const b=document.getElementById("blankAnswer").value.trim();if(!b){r.error("Please provide the correct answer");return}if(!n.includes("[blank]")){r.error("Please include [blank] in your question where the answer should go");return}t.correctAnswer=b;break}u.push(t),D(),E(),r.success("Question added successfully!")}catch(s){r.error("Error adding question: "+s.message)}}function D(){document.getElementById("questionText").value="",["A","B","C","D"].forEach(n=>{const o=document.getElementById(`option${n}`);o&&(o.value="");const t=document.getElementById(`pollOption${n}`);t&&(t.value="")});for(let n=1;n<=4;n++){const o=document.getElementById(`match${n}Left`),t=document.getElementById(`match${n}Right`),s=document.getElementById(`order${n}`);o&&(o.value=""),t&&(t.value=""),s&&(s.value="")}const e=document.getElementById("blankAnswer");e&&(e.value="")}function M(e){window.confirm("Remove this question?")&&(u.splice(e,1),E())}function E(){const e=document.getElementById("questionsList");if(u.length===0){e.innerHTML='<p style="color: var(--text-secondary); font-size: 14px;">No questions added yet.</p>';return}e.innerHTML=`
                <div style="margin-bottom: 12px;">
                    <strong>${u.length} Question(s) Added:</strong>
                </div>
                ${u.map((n,o)=>`
                    <div style="background-color: #F9FAFB; padding: 12px; border-radius: 8px; margin-bottom: 8px; display: flex; justify-content: space-between; align-items: start;">
                        <div style="flex: 1;">
                            <div style="font-weight: 500; margin-bottom: 4px;">Q${o+1}: ${n.text}</div>
                            <div style="font-size: 12px; color: var(--text-secondary);">Type: ${n.type.toUpperCase()}</div>
                        </div>
                        <button type="button" class="btn btn-danger btn-small" onclick="removeQuickPollQuestion(${o})" style="margin-left: 12px;">Remove</button>
                    </div>
                `).join("")}
            `}async function R(e){if(e.preventDefault(),!f){r.error("Please select a session type");return}if(f==="desktop")return;const o=document.getElementById("customSessionCode").value.trim()||Math.random().toString(36).substring(2,8).toUpperCase(),t={sessionCode:o,title:document.getElementById("sessionName").value,description:`${f==="quick"?"Quick Poll":"Quiz Session"} for ${g.name}`,requireLogin:!document.getElementById("allowAnonymous").checked,classId:I,restrictToEnrolled:!document.getElementById("openToAll").checked,gamification:{enabled:document.getElementById("enableGamification").checked},allowAnswerChange:document.getElementById("allowAnswerChange").checked,showCorrectAnswer:document.getElementById("showCorrectAnswer").checked};if(i.debug("=== CREATING SESSION WITH SETTINGS ==="),i.debug("showCorrectAnswer checkbox value:",document.getElementById("showCorrectAnswer").checked),i.debug("Session data being sent:",t),f==="quick"){if(u.length===0){r.error("Please add at least one question to the quick poll");return}t.questions=u}else if(f==="quiz"){const s=document.getElementById("quizSelect").value;if(!s){r.error("Please select a quiz");return}try{const a=await fetch(`https://api.intellaclick.com/api/quizzes/${s}`,{headers:{Authorization:`Bearer ${localStorage.getItem("token")}`}});if(!a.ok)throw new Error("Failed to load quiz");const p=await a.json(),y=p.quiz||p,w=(y.questions||[]).map(k=>{const d=k.questionSnapshot||{},h=d.questionType||d.type||"mcq";return{text:d.questionText||"",type:h,timeLimit:60,points:k.points||10,options:d.options,correctAnswer:d.correctAnswer,pairs:d.pairs,correctOrder:d.correctOrder,optionTexts:d.options}});if(t.questions=w,t.quizId=s,t.quizTitle=y.title,t.questions.length===0){r.error("Selected quiz has no questions");return}}catch(a){i.error("Error loading quiz:",a),r.error("Failed to load quiz data");return}}try{const s=await C.create(t),a=s.session||s,p={allowAnonymous:document.getElementById("allowAnonymous").checked,openToAll:document.getElementById("openToAll").checked,allowAnswerChange:document.getElementById("allowAnswerChange").checked,showCorrectAnswer:document.getElementById("showCorrectAnswer").checked,enableGamification:document.getElementById("enableGamification").checked};fetch("https://api.intellaclick.com/api/users/session-settings",{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${localStorage.getItem("token")}`},body:JSON.stringify(p)}).then(()=>{i.debug("✅ Saved session settings to backend for next time")}).catch(y=>{i.error("Failed to save settings (non-critical):",y)}),r.success(`Session created! Code: ${a.sessionCode||o}`),t.questions&&t.questions.length>0&&(sessionStorage.setItem("pendingQuestions",JSON.stringify(t.questions)),sessionStorage.setItem("currentQuestionIndex","0")),t.questions&&t.questions.length>0&&H(t.title,t.questions),setTimeout(()=>{i.debug("=== REDIRECTING NOW ==="),window.location.href=`session.html?id=${a.id||a._id}&code=${a.sessionCode||o}&type=${f}`},5e3)}catch(s){i.error("Error creating session:",s),r.error(s.message||"Failed to create session")}}function F(){window.confirm("Are you sure you want to cancel?")&&(window.location.href="classes.html")}function U(){const e=window.location.href;sessionStorage.setItem("createSessionUrl",e),i.debug("Navigating to saved questions, returnUrl:",e),window.location.href=`saved-questions.html?returnUrl=${encodeURIComponent(e)}`}function j(){const e=document.getElementById("questionText"),n=e.selectionStart,o=e.selectionEnd,t=e.value,s=t.substring(0,n)+"[blank]"+t.substring(o);e.value=s,e.selectionStart=e.selectionEnd=n+7,e.focus()}async function H(e,n){if(i.debug("=== AUTO-SAVE CALLED ==="),i.debug("Session name:",e),i.debug("Questions array:",n),i.debug("Questions length:",n==null?void 0:n.length),!n||n.length===0){i.debug("❌ No questions to save - skipping auto-save");return}const o=localStorage.getItem("token");if(!o){i.warn("⚠️ No authentication token - skipping auto-save (silent)");return}i.debug(`🔄 Auto-saving "${e}" with ${n.length} questions to cloud...`);const t={name:e,questions:n,classId:null};i.debug("Payload being sent:",JSON.stringify(t,null,2));try{const s=await fetch("https://api.intellaclick.com/api/question-sets",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`},body:JSON.stringify(t)});if(i.debug("Response status:",s.status),!s.ok){const p=await s.json();i.error("❌ Cloud API save failed:",p),i.error("Response status:",s.status),i.warn("⚠️ Question set auto-save failed, but session will continue");return}const a=await s.json();i.debug("✅ Question set auto-saved to cloud successfully:",a)}catch(s){i.error("❌ Error auto-saving question set:",s),i.error("Error stack:",s.stack),i.warn("⚠️ Question set auto-save failed, but session will continue")}}window.selectSessionType=q;window.goToSavedQuestions=U;window.insertBlank=j;window.updateQuestionOptions=L;window.addQuickPollQuestion=N;window.cancelSession=F;window.removeQuickPollQuestion=M;
